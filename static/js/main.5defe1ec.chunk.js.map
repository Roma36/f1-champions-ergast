{"version":3,"sources":["config/index.ts","components/Error.tsx","components/WinnersList.tsx","components/ChampionsList.tsx","App.tsx","index.tsx"],"names":["config","api","publicUrl","process","Error","_ref","children","react_default","a","createElement","style","color","WinnersListWrapper","styled","div","_templateObject","Table","table","_templateObject2","Row","tr","_templateObject3","props","isChampion","WinnersList","season","champion","className","_useState","useState","_useState2","Object","slicedToArray","winnersList","setWinnersList","url","concat","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","isError","setIsError","fetchData","_ref2","asyncToGenerator","regenerator_default","mark","_callee","result","wrap","_context","prev","next","axios","sent","data","MRData","RaceTable","Races","t0","stop","this","apply","arguments","useEffect","Boolean","length","map","item","results","Results","driver","Driver","constructor","Constructor","key","round","Circuit","Location","country","driverId","date","Date","toDateString","slice","givenName","familyName","name","laps","Time","time","marginTop","border","ToggleableWinnersList","ChampionsList_templateObject","isDisplayed","List","ul","ChampionsList_templateObject2","li","ChampionsList_templateObject3","isActive","ChampionsList","standingsList","setStandingsList","_useState7","_useState8","sublistState","setSublistState","standings","StandingsTable","StandingsLists","reduce","acc","current","objectSpread","defineProperty","isLoaded","handleRowClick","react","champSeason","seasonState","DriverStandings","ChampionsList_Row","onClick","bind","AppWrapper","App_templateObject","Header","header","App_templateObject2","Logo","img","App_templateObject3","ContentWrapper","_templateObject4","App","src","components_ChampionsList","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.5defe1ec.chunk.js","sourcesContent":["export default {\n  api: 'http://ergast.com/api/',\n  publicUrl: process.env.PUBLIC_URL,\n};\n","import React, { Props } from 'react';\n\nexport default function Error({ children }: Props<any>) {\n  return <span style={{ color: 'red' }}>{children}</span>;\n}\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport config from '../config';\nimport { DriverInfo } from '../models';\nimport styled from 'styled-components';\nimport Error from './Error';\n\nconst WinnersListWrapper = styled.div`\n  overflow: auto;\n`;\n\nconst Table = styled.table`\n  border-collapse: collapse;\n  width: 100%;\n\n  & th {\n    padding: 18px 20px 14px;\n    text-align: left;\n    text-transform: uppercase;\n    font-weight: 500;\n    color: gray;\n    font-size: 11px;\n  }\n\n  & > tbody > tr:nth-child(odd) {\n    background: #f4f4f4;\n  }\n`;\n\nconst Row = styled.tr`\n  & > td {\n    min-width: 80px;\n    font-size: 13px;\n    text-align: left;\n    padding: 18px 20px 14px;\n    color: #171717;\n  }\n\n  ${(props: { isChampion: boolean }) =>\n    props.isChampion\n      ? `\n  & > td {\n    background: red;\n    color: #fff;\n    font-weight: bold;\n    font-size: 1rem;\n    }\n\n  `\n      : ''}\n`;\n\ninterface WinnerListProperties {\n  season: string;\n  champion: DriverInfo;\n  className?: string;\n}\n\ninterface WinnersInfo {\n  season: string;\n  round: string;\n  Circuit: {\n    Location: {\n      country: string;\n    };\n  };\n  date: string;\n  Results: Array<{\n    Driver: DriverInfo;\n    Constructor: { name: string };\n    laps: string;\n    Time: { time: string };\n  }>;\n}\n\nfunction WinnersList({ season, champion, className }: WinnerListProperties) {\n  const [winnersList, setWinnersList] = useState<WinnersInfo[]>([]);\n  const url = `${config.api}f1/${season}/results/1.json`;\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  const fetchData = async () => {\n    setIsError(false);\n    setIsLoading(true);\n\n    try {\n      const result = await axios(url);\n\n      setWinnersList(result.data.MRData.RaceTable.Races);\n    } catch (error) {\n      setIsError(true);\n    }\n\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, [url]);\n\n  if (isError) return <Error>Something went wrong ...</Error>;\n\n  return (\n    <WinnersListWrapper className={className}>\n      {isLoading && <div>Loading ...</div>}\n      {!isLoading && !isError && Boolean(winnersList.length) && (\n        <div>\n          <Table>\n            <thead>\n              <tr>\n                <th>Grand Prix</th>\n                <th>Date</th>\n                <th>Winner</th>\n                <th>Car</th>\n                <th>Laps</th>\n                <th>Time</th>\n              </tr>\n            </thead>\n            <tbody>\n              {winnersList.map(item => {\n                const results = item.Results[0];\n                const driver = results.Driver;\n                const constructor = results.Constructor;\n                const key = `${item.round}-${item.Circuit.Location.country}-${driver.driverId}`;\n                const date = new Date(item.date);\n\n                return (\n                  <Row isChampion={driver.driverId === champion.driverId} key={key}>\n                    <td>{item.Circuit.Location.country}</td>\n                    <td>{`${date.toDateString().slice(4)}`}</td>\n                    <td>{`${driver.givenName} ${driver.familyName}`}</td>\n                    <td>{constructor.name}</td>\n                    <td>{results.laps}</td>\n                    <td>{results.Time.time}</td>\n                  </Row>\n                );\n              })}\n            </tbody>\n          </Table>\n          <hr style={{ marginTop: '20px', border: '1px dashed gray' }} />\n        </div>\n      )}\n    </WinnersListWrapper>\n  );\n}\n\nexport default WinnersList;\n","import React, { Fragment, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport config from '../config';\nimport { DriverInfo } from '../models';\nimport WinnersList from './WinnersList';\nimport styled from 'styled-components';\nimport Error from './Error';\n\nconst ToggleableWinnersList = styled(WinnersList)`\n  ${(props: { isDisplayed: boolean }) => `\n    display: ${props.isDisplayed ? '' : 'none'}\n  `}\n`;\n\nconst List = styled.ul`\n  margin-top: 0;\n  padding: 0;\n`;\n\nconst Row = styled.li`\n  width: 100%;\n  min-height: 40px;\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n\n  & > span {\n    font-weight: bold;\n    font-size: 20px;\n    padding: 10px 5px;\n    cursor: pointer;\n    &:hover {\n      background: #000;\n      color: #fff;\n    }\n\n    ${(props: { isActive: boolean }) =>\n      props.isActive\n        ? `\n      background: #000;\n      color: #fff;\n    `\n        : ''}\n  }\n`;\n\ninterface StandingsInfo {\n  season: string;\n  DriverStandings: Array<{\n    Driver: DriverInfo;\n  }>;\n}\n\ninterface SublistState {\n  isDisplayed: boolean;\n  isLoaded: boolean;\n}\n\nfunction ChampionsList() {\n  const [standingsList, setStandingsList] = useState<StandingsInfo[]>([]);\n  const url = `${config.api}f1/driverStandings/1.json?limit=11&offset=55`;\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  const [sublistState, setSublistState] = useState<{ [season: string]: SublistState }>({});\n\n  const fetchData = async () => {\n    setIsError(false);\n    setIsLoading(true);\n\n    try {\n      const result = await axios(url);\n      const standings: StandingsInfo[] = result.data.MRData.StandingsTable.StandingsLists;\n      setStandingsList(standings);\n      setSublistState(\n        // prefill sublist state;\n        standings.reduce((acc, current) => ({ ...acc, [current.season]: { isDisplayed: false, isLoaded: false } }), {})\n      );\n    } catch (error) {\n      setIsError(true);\n    }\n\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, [url]);\n\n  const handleRowClick = (season: string) => {\n    setSublistState({\n      ...sublistState,\n      [season]: {\n        isLoaded: true,\n        isDisplayed: !sublistState[season].isDisplayed,\n      },\n    });\n  };\n\n  if (isError) return <Error>Something went wrong ...</Error>;\n\n  return (\n    <Fragment>\n      {isLoading && <div>Loading ...</div>}\n      {!isLoading && !isError && Boolean(standingsList.length) && (\n        <List>\n          {standingsList.map(item => {\n            const champSeason = item.season;\n            const seasonState = sublistState[champSeason];\n            const driver = item.DriverStandings[0].Driver;\n\n            const key = `${champSeason} - ${driver.driverId}`;\n            return (\n              <Row isActive={seasonState.isDisplayed} key={key}>\n                <span onClick={handleRowClick.bind(null, champSeason)}>{`${champSeason} - ${driver.givenName} ${\n                  driver.familyName\n                }`}</span>\n                <div>\n                  {seasonState.isLoaded && (\n                    <ToggleableWinnersList\n                      isDisplayed={seasonState.isDisplayed}\n                      season={champSeason}\n                      champion={driver}\n                    />\n                  )}\n                </div>\n              </Row>\n            );\n          })}\n        </List>\n      )}\n    </Fragment>\n  );\n}\n\nexport default ChampionsList;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport config from './config';\nimport ChampionsList from './components/ChampionsList';\n\nconst AppWrapper = styled.div``;\n\nconst Header = styled.header`\n  background: #e10600;\n  height: 64px;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Logo = styled.img`\n  width: 120px;\n  margin: 5px 0;\n`;\n\nconst ContentWrapper = styled.div`\n  padding: 2%;\n`;\n\nclass App extends Component {\n  render() {\n    return (\n      <AppWrapper>\n        <Header>\n          <Logo src={config.publicUrl + '/img/flags.png'} />\n        </Header>\n\n        <ContentWrapper>\n          <ChampionsList />\n        </ContentWrapper>\n      </AppWrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}